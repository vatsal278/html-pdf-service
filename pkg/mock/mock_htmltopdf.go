// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vatsal278/html-pdf-service/internal/repo/htmlToPdf (interfaces: HtmlToPdf)

// Package mock is a generated GoMock package.
package mock

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHtmlToPdf is a mock of HtmlToPdf interface.
type MockHtmlToPdf struct {
	ctrl     *gomock.Controller
	recorder *MockHtmlToPdfMockRecorder
}

// MockHtmlToPdfMockRecorder is the mock recorder for MockHtmlToPdf.
type MockHtmlToPdfMockRecorder struct {
	mock *MockHtmlToPdf
}

// NewMockHtmlToPdf creates a new mock instance.
func NewMockHtmlToPdf(ctrl *gomock.Controller) *MockHtmlToPdf {
	mock := &MockHtmlToPdf{ctrl: ctrl}
	mock.recorder = &MockHtmlToPdfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHtmlToPdf) EXPECT() *MockHtmlToPdfMockRecorder {
	return m.recorder
}

// GeneratePdf mocks base method.
func (m *MockHtmlToPdf) GeneratePdf(arg0 io.Writer, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GeneratePdf", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GeneratePdf indicates an expected call of GeneratePdf.
func (mr *MockHtmlToPdfMockRecorder) GeneratePdf(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeneratePdf", reflect.TypeOf((*MockHtmlToPdf)(nil).GeneratePdf), arg0, arg1)
}

// GetJsonFromHtml mocks base method.
func (m *MockHtmlToPdf) GetJsonFromHtml(arg0 []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJsonFromHtml", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJsonFromHtml indicates an expected call of GetJsonFromHtml.
func (mr *MockHtmlToPdfMockRecorder) GetJsonFromHtml(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJsonFromHtml", reflect.TypeOf((*MockHtmlToPdf)(nil).GetJsonFromHtml), arg0)
}

// HealthCheck mocks base method.
func (m *MockHtmlToPdf) HealthCheck() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HealthCheck")
	ret0, _ := ret[0].(bool)
	return ret0
}

// HealthCheck indicates an expected call of HealthCheck.
func (mr *MockHtmlToPdfMockRecorder) HealthCheck() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheck", reflect.TypeOf((*MockHtmlToPdf)(nil).HealthCheck))
}
