// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vatsal278/html-pdf-service/internal/logic (interfaces: HtmlPdfServiceLogicIer)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	model "github.com/PereRohit/util/model"
	gomock "github.com/golang/mock/gomock"
	model0 "github.com/vatsal278/html-pdf-service/internal/model"
)

// MockHtmlPdfServiceLogicIer is a mock of HtmlPdfServiceLogicIer interface.
type MockHtmlPdfServiceLogicIer struct {
	ctrl     *gomock.Controller
	recorder *MockHtmlPdfServiceLogicIerMockRecorder
}

// MockHtmlPdfServiceLogicIerMockRecorder is the mock recorder for MockHtmlPdfServiceLogicIer.
type MockHtmlPdfServiceLogicIerMockRecorder struct {
	mock *MockHtmlPdfServiceLogicIer
}

// NewMockHtmlPdfServiceLogicIer creates a new mock instance.
func NewMockHtmlPdfServiceLogicIer(ctrl *gomock.Controller) *MockHtmlPdfServiceLogicIer {
	mock := &MockHtmlPdfServiceLogicIer{ctrl: ctrl}
	mock.recorder = &MockHtmlPdfServiceLogicIerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHtmlPdfServiceLogicIer) EXPECT() *MockHtmlPdfServiceLogicIerMockRecorder {
	return m.recorder
}

// HealthCheck mocks base method.
func (m *MockHtmlPdfServiceLogicIer) HealthCheck() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HealthCheck")
	ret0, _ := ret[0].(bool)
	return ret0
}

// HealthCheck indicates an expected call of HealthCheck.
func (mr *MockHtmlPdfServiceLogicIerMockRecorder) HealthCheck() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheck", reflect.TypeOf((*MockHtmlPdfServiceLogicIer)(nil).HealthCheck))
}

// Ping mocks base method.
func (m *MockHtmlPdfServiceLogicIer) Ping(arg0 *model0.PingRequest) *model.Response {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", arg0)
	ret0, _ := ret[0].(*model.Response)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockHtmlPdfServiceLogicIerMockRecorder) Ping(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockHtmlPdfServiceLogicIer)(nil).Ping), arg0)
}
